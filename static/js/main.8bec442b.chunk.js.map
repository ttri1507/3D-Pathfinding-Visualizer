{"version":3,"sources":["components/floor_texture.jpg","components/algorithms/helpers.js","components/algorithms/weightedSearchAlgorithm.js","components/algorithms/mazeAlgorithms.js","components/Grid.js","components/algorithms/unweightedSearchAlgorithm.js","components/Floor.js","components/Controls.js","assets/info.svg","components/Tutorial.js","assets/settings.svg","components/Settings.js","components/World.js","App.js","reportWebVitals.js","index.js"],"names":["tweenToColor","node","geometry","colors","a","duration","options","i","length","TWEEN","Tween","faces","color","to","onUpdate","colorsNeedUpdate","delay","start","position","facesIndices","forEach","indices","vertices","y","verticesNeedUpdate","weightedSearchAlgorithm","grid","target","nodesToAnimate","name","heuristic","distance","direction","totalDistance","unvisitedNodes","nodes","row","push","getAllNodes","currentNode","closestNode","status","Infinity","id","updateNeighbors","currentClosest","index","heuristicDistance","splice","neighbors","col","filter","neighbor","stutus","getNeighbors","updateNode","targetNode","actualStartNode","actualTargetNode","distanceToCompare","nodeOne","nodeTwo","x1","y1","x2","y2","getDistance","weight","manhattanDistance","Math","pow","previousNode","path","nodeOneCoordinates","nodeTwoCoordinates","abs","recursiveDivisionMaze","rowStart","rowEnd","colStart","colEnd","orientation","surroundingWalls","type","reservedStatus","j","converNodeToType","possibleRows","number","possibleCols","randomRowIndex","floor","random","randomColIndex","currentRow","colRandom","currentCol","rowRandom","includes","Grid","props","groundMaterial","previousHoverNodeId","currentHoverNodeId","mouseDownX","mouseDownY","mouseIsUp","useState","THREE","groundGeometry","selectedAlgorithm","selectedMazeAlgorithm","runState","worldProperties","trainTheAgent","trainAgent","clearTheWalls","clearWalls","clearThePath","clearPath","algorithmSpeed","agentKnowledge","applyingSettings","visualizeThePolicy","visualizeOptimalPolicy","useThree","camera","useEffect","terrain","settingsConfig","startRow","startCol","onceSpecial","finishRow","finishCol","reward","default","finishApplyingSettings","resetTerrainConfig","currentState","policyList","maxAction","chooseAction","agentCuriosity","action_dy","actions","action_dx","nextState","optimalPolicy","calculateOptimalPolicy","headRow","headCol","tailRow","tailCol","head","tail","setTimeout","undefined","r","g","b","animateOptimalPolicy","finishedOptimalPolicy","records","q_table","Array","rows","fill","map","cols","agentResetDone","minimum","maximum","ratio","blue","Number","max","red","green","updateRunState","animateQlearning","console","log","processedSuccessfuly","startNode","finishNode","finish","algorithm","structure","exploredNodes","shift","pop","unshift","unweightedSearchAlgorithm","nodesInShortestPathOrder","getNodesInShortestPathOrder","visitedNodesInOrder","timerDelay","animateShortestPath","visited","animateAlgorithm","visualizeAlgorithm","epochs","states","action","currentQValue","maxState","maxQValue","temporal_difference","gamma","q_value","alpha","visits","learningRate","parseFloat","toFixed","getRecord","stopTraining","qLearning","randomMaze","animateMaze","loader","useMemo","load","img","texture","wrapS","wrapT","repeat","x","side","vertexColors","receiveShadow","mesh","useRef","tempGrid","createNode","renderLoop","initializeGrid","tempStateGrid","initStates","faceIndex","qValue","window","requestAnimationFrame","nodeRow","nodeCol","wall","hoverLoop","update","mouseUpHandler","event","clientX","clientY","nodeId","linearIndex","findNodeId","e_greedy","rwc","require","actionOptions","chosenOption","takingRandomAction","randomIndex","selectedAction","actionChange","isValidState","policyCandidates","Object","keys","reduce","v","listOfMax","maxCandidate","tempVals","split","record","state","stopClearWalls","removeAll","stopClearPath","stopMazeSelection","ref","args","gridDimensions","rotation","PI","onPointerDown","e","onPointerUp","resetStatus","onPointerMove","attach","object","Floor","Controls","controls","z","easing","Easing","Exponential","Out","onComplete","current","enableRotate","_extends","assign","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","transform","width","height","d","stroke","strokeLinecap","strokeLinejoin","strokeWidth","cx","cy","SvgInfo","_ref","svgRef","title","titleId","viewBox","ForwardRef","Tutorial","className","size","url","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","SvgSettings","style","enableBackground","xmlSpace","Settings","setEpochs","setStartRow","setStartCol","setFinishRow","setFinishCol","setLearningRate","setAgentCuriosity","classes","makeStyles","theme","root","margin","spacing","background","border","borderRadius","slider","marginTop","marginBottom","marginLeft","useStyles","muiTheme","createMuiTheme","overrides","MuiSlider","thumb","track","rail","breakpoints","textBoxTheme","palette","primary","ThemeProvider","Slider","defaultValue","aria-labelledby","valueLabelDisplay","step","marks","min","onChangeCommitted","value","handleEpochChange","TextField","label","variant","onChange","handleStartRowChange","handleStartColChange","handleFinishRowChange","handleFinishColChange","handleLRChange","handleCuriosityChange","disabled","loadingLabel","resultLabel","ripple","element","next","configureSettings","startTraining","visualizePolicy","World","innerWidth","innerHeigh","setSelectedAlgorithm","setRunState","resetCamera","setResetCamera","setClearWalls","setClearPath","setTrainAgent","setAgentKnowledge","cameraPosition","setSelectedMazeAlgorithm","setAlgorithmSpeed","selected_algo_is_undefined","setAlgo","setApplyingSettings","setConfig","setVisualizeOptimalPolicy","align","Select","displayEmpty","MenuItem","userEpochs","userStartRow","userStartCol","userFinishRow","userFinishCol","userLearningRate","userAgentCuriosity","colorManagement","fov","aspect","near","far","intensity","groundColor","castShadow","newState","nodeDimensions","updateResetStatus","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8bec442b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/floor_texture.9dabdb90.jpg\";","import TWEEN from \"@tweenjs/tween.js\";\n\nexport function getAllNodes(grid) {\n\tconst nodes = [];\n\tfor (const row of grid) {\n\t\tnodes.push(...row);\n\t}\n\treturn nodes;\n}\n\n// Backtracks from the finishNode to find the shortest path.\n// Only works when called *after* the dijkstra method above.\nexport function getNodesInShortestPathOrder(finishNode) {\n\tconst nodesInShortestPathOrder = [];\n\tlet currentNode = finishNode;\n\t//Excluding finish node\n\tif(currentNode.previousNode !== null) {\n\t\tcurrentNode = currentNode.previousNode;\n\t}\n\twhile (currentNode !== null) {\n\t\t// Excluding start node\n\t\tif(currentNode.previousNode === null) {\n\t\t\tbreak;\n\t\t}\n\t\tnodesInShortestPathOrder.unshift(currentNode);\n\t\tcurrentNode = currentNode.previousNode;\n\t}\n\n\treturn nodesInShortestPathOrder;\n}\n\nexport async function tweenToColor(node, geometry, colors, duration = 300, options) {\n\tfor(let i=0; i<colors.length; i++) {\n\t\t//console.log(node);\n\t\tnew TWEEN.Tween(node.faces[1].color)\n\t\t\t.to(colors[i], duration)\n\t\t\t.onUpdate(() => {\n\t\t\t\tgeometry.colorsNeedUpdate = true;\n\t\t\t})\n\t\t\t.delay(i*200)\n\t\t\t.start();\n\t\tnew TWEEN.Tween(node.faces[2].color)\n\t\t\t.to(colors[i], duration)\n\t\t\t.onUpdate(() => {\n\t\t\t\tgeometry.colorsNeedUpdate = true;\n\t\t\t})\n\t\t\t.delay(i*200)\n\t\t\t.start();\n\t}\n\tif (options) {\n\t\tif (options.position) {\n\t\t\tvar facesIndices = [\"a\", \"b\", \"c\"];\n\t\t\tfacesIndices.forEach(function (indices) {\n\t\t\t\tnew TWEEN.Tween(geometry.vertices[node.faces[1][indices]])\n\t\t\t\t\t.to({ y: 0.5 }, duration)\n\t\t\t\t\t.onUpdate(() => {\n\t\t\t\t\t\tgeometry.verticesNeedUpdate = true;\n\t\t\t\t\t})\n\t\t\t\t\t.start();\n\t\t\t\tnew TWEEN.Tween(geometry.vertices[node.faces[2][indices]])\n\t\t\t\t\t.to({ y: 0.5 }, duration)\n\t\t\t\t\t.onUpdate(() => {\n\t\t\t\t\t\tgeometry.verticesNeedUpdate = true;\n\t\t\t\t\t})\n\t\t\t\t\t.start();\n\t\t\t});\n\t\t\tfacesIndices.forEach(function (indices) {\n\t\t\t\tnew TWEEN.Tween(geometry.vertices[node.faces[1][indices]])\n\t\t\t\t\t.to({ y: 0 }, duration)\n\t\t\t\t\t.onUpdate(() => {\n\t\t\t\t\t\tgeometry.verticesNeedUpdate = true;\n\t\t\t\t\t})\n\t\t\t\t\t.delay(100)\n\t\t\t\t\t.start();\n\t\t\t\tnew TWEEN.Tween(geometry.vertices[node.faces[2][indices]])\n\t\t\t\t\t.to({ y: 0 }, duration)\n\t\t\t\t\t.onUpdate(() => {\n\t\t\t\t\t\tgeometry.verticesNeedUpdate = true;\n\t\t\t\t\t})\n\t\t\t\t\t.delay(100)\n\t\t\t\t\t.start();\n\t\t\t});\n\t\t}\n\t}\n}","import { getAllNodes } from './helpers.js';\n\nexport function weightedSearchAlgorithm(grid, start, target, nodesToAnimate, name, heuristic) {\n  // Initialze nodes\n\tstart.distance = 0;\n\tstart.direction = \"right\";\n\tif(name === \"aStar\") {\n\t\tstart.totalDistance = 0;\n\t}\n\t// Should be a Priority Queue\n  let unvisitedNodes = getAllNodes(grid);\n  while (unvisitedNodes.length) {\n        let currentNode = closestNode(unvisitedNodes, name);\n    while (currentNode.status === \"wall\" && unvisitedNodes.length) {\n        currentNode = closestNode(unvisitedNodes, name)\n    }\n    if (currentNode.distance === Infinity) return false;\n    nodesToAnimate.push(currentNode);\n    //if(currentNode.status !== \"start\" && currentNode.status !== \"finish\"){\n      currentNode.status = \"visited\";\n    //}\n    // Ending condition\n\t\tif (currentNode.id === target.id) return \"success!\";\n\t\t// Updating neighbors\n    if (name === \"CLA\" || name === \"greedy\" || name === \"aStar\") {\n      updateNeighbors(grid, currentNode, start, target, name, heuristic);\n    } else if (name === \"Dijkstra\") {\n      updateNeighbors(grid, currentNode);\n    }\n  }\n}\n\nfunction closestNode(unvisitedNodes, name) {\n  let currentClosest, index;\n  for (let i = 0; i < unvisitedNodes.length; i++) {\n\t\tif(name === \"aStar\") {\n\t\t\tif (!currentClosest || currentClosest.totalDistance > unvisitedNodes[i].totalDistance) {\n\t\t\t\tcurrentClosest = unvisitedNodes[i];\n\t\t\t\tindex = i;\n\t\t\t} else if (currentClosest.totalDistance === unvisitedNodes[i].totalDistance) {\n\t\t\t\tif (currentClosest.heuristicDistance > unvisitedNodes[i].heuristicDistance) {\n\t\t\t\t\tcurrentClosest = unvisitedNodes[i];\n\t\t\t\t\tindex = i;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (!currentClosest || currentClosest.distance > unvisitedNodes[i].distance) {\n\t\t\t\tcurrentClosest = unvisitedNodes[i];\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n  }\n  unvisitedNodes.splice(index, 1);\n  return currentClosest;\n}\n\nfunction updateNeighbors(grid, node, start, target, name, heuristic) {\n  let neighbors = getNeighbors(node, grid);\n  for (let neighbor of neighbors) {\n    if (target) {\n      updateNode(node, neighbor, start, target, name, heuristic);\n    } else {\n      updateNode(node, neighbor);\n    }\n  }\n}\n\n\n\nfunction updateNode(currentNode, targetNode, actualStartNode, actualTargetNode, name, heuristic) {\n  let distance = getDistance(currentNode, targetNode);\n  let distanceToCompare;\n  if (actualTargetNode && name === \"CLA\") {\n    let weight = targetNode.weight === 15 ? 15 : 1;\n    if (heuristic === \"manhattanDistance\") {\n      distanceToCompare = currentNode.distance + (distance[0] + weight) * manhattanDistance(targetNode, actualTargetNode);\n    } else if (heuristic === \"poweredManhattanDistance\") {\n      distanceToCompare = currentNode.distance + targetNode.weight + distance[0] + Math.pow(manhattanDistance(targetNode, actualTargetNode), 2);\n    } else if (heuristic === \"extraPoweredManhattanDistance\") {\n      distanceToCompare = currentNode.distance + (distance[0] + weight) * Math.pow(manhattanDistance(targetNode, actualTargetNode), 7);\n    }\n  } else if (actualTargetNode && name === \"greedy\") {\n    distanceToCompare = targetNode.weight + distance[0] + manhattanDistance(targetNode, actualTargetNode);\n  } else if(name === \"aStar\") {\n\t\tif (!targetNode.heuristicDistance) targetNode.heuristicDistance = manhattanDistance(targetNode, actualTargetNode);\n\t\tdistanceToCompare = currentNode.distance + targetNode.weight + distance[0];\n\t} else {\n    distanceToCompare = currentNode.distance + targetNode.weight + distance[0];\n  }\n  if (distanceToCompare < targetNode.distance) {\n    targetNode.distance = distanceToCompare;\n    targetNode.previousNode = currentNode;\n    targetNode.path = distance[1];\n\t\ttargetNode.direction = distance[2];\n\t\tif(name === \"aStar\") {\n\t\t\ttargetNode.totalDistance = targetNode.distance + targetNode.heuristicDistance;\n\t\t}\n  }\n}\n\nfunction getNeighbors(node, grid) {\n\tconst neighbors = [];\n\tconst {col, row} = node;\n\tif (row > 0) neighbors.push(grid[row - 1][col]);\n\tif (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\n\tif (col > 0) neighbors.push(grid[row][col - 1]);\n\tif (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\n\treturn neighbors.filter(neighbor => neighbor.stutus !== \"visited\");\n}\n\n\nfunction getDistance(nodeOne, nodeTwo) {\n  let x1 = nodeOne.row;\n  let y1 = nodeOne.col;\n  let x2 = nodeTwo.row;\n  let y2 = nodeTwo.col;\n\tif (x2 < x1 && y1 === y2) {\n    if (nodeOne.direction === \"up\") {\n      return [1, [\"f\"], \"up\"];\n    } else if (nodeOne.direction === \"right\") {\n      return [2, [\"l\", \"f\"], \"up\"];\n    } else if (nodeOne.direction === \"left\") {\n      return [2, [\"r\", \"f\"], \"up\"];\n    } else if (nodeOne.direction === \"down\") {\n      return [3, [\"r\", \"r\", \"f\"], \"up\"];\n    } else if (nodeOne.direction === \"up-right\") {\n      return [1.5, null, \"up\"];\n    } else if (nodeOne.direction === \"down-right\") {\n      return [2.5, null, \"up\"];\n    } else if (nodeOne.direction === \"up-left\") {\n      return [1.5, null, \"up\"];\n    } else if (nodeOne.direction === \"down-left\") {\n      return [2.5, null, \"up\"];\n    }\n  } else if (x2 > x1 && y1 === y2) {\n    if (nodeOne.direction === \"up\") {\n      return [3, [\"r\", \"r\", \"f\"], \"down\"];\n    } else if (nodeOne.direction === \"right\") {\n      return [2, [\"r\", \"f\"], \"down\"];\n    } else if (nodeOne.direction === \"left\") {\n      return [2, [\"l\", \"f\"], \"down\"];\n    } else if (nodeOne.direction === \"down\") {\n      return [1, [\"f\"], \"down\"];\n    } else if (nodeOne.direction === \"up-right\") {\n      return [2.5, null, \"down\"];\n    } else if (nodeOne.direction === \"down-right\") {\n      return [1.5, null, \"down\"];\n    } else if (nodeOne.direction === \"up-left\") {\n      return [2.5, null, \"down\"];\n    } else if (nodeOne.direction === \"down-left\") {\n      return [1.5, null, \"down\"];\n    }\n  }\n  if (y2 < y1 && x1 === x2) {\n    if (nodeOne.direction === \"up\") {\n      return [2, [\"l\", \"f\"], \"left\"];\n    } else if (nodeOne.direction === \"right\") {\n      return [3, [\"l\", \"l\", \"f\"], \"left\"];\n    } else if (nodeOne.direction === \"left\") {\n      return [1, [\"f\"], \"left\"];\n    } else if (nodeOne.direction === \"down\") {\n      return [2, [\"r\", \"f\"], \"left\"];\n    } else if (nodeOne.direction === \"up-right\") {\n      return [2.5, null, \"left\"];\n    } else if (nodeOne.direction === \"down-right\") {\n      return [2.5, null, \"left\"];\n    } else if (nodeOne.direction === \"up-left\") {\n      return [1.5, null, \"left\"];\n    } else if (nodeOne.direction === \"down-left\") {\n      return [1.5, null, \"left\"];\n    }\n  } else if (y2 > y1 && x1 === x2) {\n    if (nodeOne.direction === \"up\") {\n      return [2, [\"r\", \"f\"], \"right\"];\n    } else if (nodeOne.direction === \"right\") {\n      return [1, [\"f\"], \"right\"];\n    } else if (nodeOne.direction === \"left\") {\n      return [3, [\"r\", \"r\", \"f\"], \"right\"];\n    } else if (nodeOne.direction === \"down\") {\n      return [2, [\"l\", \"f\"], \"right\"];\n    } else if (nodeOne.direction === \"up-right\") {\n      return [1.5, null, \"right\"];\n    } else if (nodeOne.direction === \"down-right\") {\n      return [1.5, null, \"right\"];\n    } else if (nodeOne.direction === \"up-left\") {\n      return [2.5, null, \"right\"];\n    } else if (nodeOne.direction === \"down-left\") {\n      return [2.5, null, \"right\"];\n    }\n  } \n}\n\nfunction manhattanDistance(nodeOne, nodeTwo) {\n  let nodeOneCoordinates = [nodeOne.row, nodeOne.col];\n  let nodeTwoCoordinates = [nodeTwo.row, nodeTwo.col]\n  let xChange = Math.abs(nodeOneCoordinates[0] - nodeTwoCoordinates[0]);\n  let yChange = Math.abs(nodeOneCoordinates[1] - nodeTwoCoordinates[1]);\n  return (xChange + yChange);\n}","export function randomMaze(grid, nodesToAnimate, type) {\n\tfor(let i=0; i<grid.length; i++) {\n\t\tfor(let j=0; j<grid[0].length; j++) {\n\t\t\tlet random = Math.random();\n\t\t\tlet currentNode = grid[i][j];\n\t\t\tlet reservedStatus = [\"start\", \"finish\"];\n\t\t\tlet randomTwo = type === \"wall\" ? 0.25 : 0.35;\n\t\t\tif (random < randomTwo && !reservedStatus.includes(currentNode.status)) {\n\t\t\t\tnodesToAnimate.push(currentNode);\n\t\t\t\tif (type === \"wall\") {\n\t\t\t\t\t// currentNode.status = \"wall\";\n\t\t\t\t\tcurrentNode.weight = 0;\n\t\t\t\t} else if (type === \"weight\") {\n\t\t\t\t\t// currentNode.status = \"default\";  // should be \"weight\"; left for later implementation\n\t\t\t\t\tcurrentNode.weight = 15;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function recursiveDivisionMaze(grid, rowStart, rowEnd, colStart, colEnd, orientation, surroundingWalls, nodesToAnimate, type) {\n  if (rowEnd < rowStart || colEnd < colStart) {\n    return;\n\t}\n\n\tlet reservedStatus = [\"start\", \"finish\"];\n\tfunction converNodeToType(node) {\n\t\tif(reservedStatus.includes(node.status)) return;\n\t\tnodesToAnimate.push(node);\n\t\tif (type === \"wall\") {\n\t\t\t// node.status = \"wall\";\n\t\t\tnode.weight = 0;\n\t\t} else if (type === \"weight\") {\n\t\t\t// node.status = \"default\";  // should be \"weight\"; left for later implementation\n\t\t\tnode.weight = 15;\n\t\t}\n\t}\n\n  if (!surroundingWalls) {\n\t\tlet i, j;\n\t\t//First row\n\t\tfor(j=0; j<grid[0].length; j++) {\n\t\t\ti = 0;\n\t\t\tconverNodeToType(grid[i][j]);\n\t\t}\n\t\t//Last row\n\t\tfor(j=0; j<grid[0].length; j++) {\n\t\t\ti = grid.length-1;\n\t\t\tconverNodeToType(grid[i][j]);\n\t\t}\n\t\t//First column\n\t\tfor(i=1; i<grid.length-1; i++) {\n\t\t\tj = 0;\n\t\t\tconverNodeToType(grid[i][j]);\n\t\t}\n\t\t//Last column\n\t\tfor(i=1; i<grid.length-1; i++) {\n\t\t\tj = grid[0].length-1;\n\t\t\tconverNodeToType(grid[i][j]);\n\t\t}\n    surroundingWalls = true;\n  }\n  if (orientation === \"horizontal\") {\n    let possibleRows = [];\n    for (let number = rowStart; number <= rowEnd; number += 2) {\n      possibleRows.push(number);\n    }\n    let possibleCols = [];\n    for (let number = colStart - 1; number <= colEnd + 1; number += 2) {\n      possibleCols.push(number);\n    }\n    let randomRowIndex = Math.floor(Math.random() * possibleRows.length);\n    let randomColIndex = Math.floor(Math.random() * possibleCols.length);\n    let currentRow = possibleRows[randomRowIndex];\n\t\tlet colRandom = possibleCols[randomColIndex];\n\t\t\n\t\tlet i = currentRow, j;\n\t\tfor(j=colStart-1; j<=colEnd+1; j++) {\n\t\t\tif(j !== colRandom) {\n\t\t\t\tconverNodeToType(grid[i][j]);\n\t\t\t}\n\t\t}\n    if (currentRow - 2 - rowStart > colEnd - colStart) {\n      recursiveDivisionMaze(grid, rowStart, currentRow - 2, colStart, colEnd, orientation, surroundingWalls, nodesToAnimate, type);\n    } else {\n      recursiveDivisionMaze(grid, rowStart, currentRow - 2, colStart, colEnd, \"vertical\", surroundingWalls, nodesToAnimate, type);\n    }\n    if (rowEnd - (currentRow + 2) > colEnd - colStart) {\n      recursiveDivisionMaze(grid, currentRow + 2, rowEnd, colStart, colEnd, orientation, surroundingWalls, nodesToAnimate, type);\n    } else {\n      recursiveDivisionMaze(grid, currentRow + 2, rowEnd, colStart, colEnd, \"vertical\", surroundingWalls, nodesToAnimate, type);\n    }\n  } else {\n    let possibleCols = [];\n    for (let number = colStart; number <= colEnd; number += 2) {\n      possibleCols.push(number);\n    }\n    let possibleRows = [];\n    for (let number = rowStart - 1; number <= rowEnd + 1; number += 2) {\n      possibleRows.push(number);\n    }\n    let randomColIndex = Math.floor(Math.random() * possibleCols.length);\n    let randomRowIndex = Math.floor(Math.random() * possibleRows.length);\n    let currentCol = possibleCols[randomColIndex];\n\t\tlet rowRandom = possibleRows[randomRowIndex];\n\n\t\tlet i, j = currentCol;\n\t\tfor(i=rowStart-1; i<=rowEnd+1; i++) {\n\t\t\tif(i !== rowRandom) {\n\t\t\t\tconverNodeToType(grid[i][j]);\n\t\t\t}\n\t\t}\n    if (rowEnd - rowStart > currentCol - 2 - colStart) {\n      recursiveDivisionMaze(grid, rowStart, rowEnd, colStart, currentCol - 2, \"horizontal\", surroundingWalls, nodesToAnimate, type);\n    } else {\n      recursiveDivisionMaze(grid, rowStart, rowEnd, colStart, currentCol - 2, orientation, surroundingWalls, nodesToAnimate, type);\n    }\n    if (rowEnd - rowStart > colEnd - (currentCol + 2)) {\n      recursiveDivisionMaze(grid, rowStart, rowEnd, currentCol + 2, colEnd, \"horizontal\", surroundingWalls, nodesToAnimate, type);\n    } else {\n      recursiveDivisionMaze(grid, rowStart, rowEnd, currentCol + 2, colEnd, orientation, surroundingWalls, nodesToAnimate, type);\n    }\n\t}\n};","import React, { useState, useRef, useEffect, useMemo } from 'react'\nimport * as THREE from 'three'\nimport img from './floor_texture.jpg';\nimport { tweenToColor, getNodesInShortestPathOrder } from './algorithms/helpers'\nimport TWEEN from '@tweenjs/tween.js';\nimport { weightedSearchAlgorithm } from \"./algorithms/weightedSearchAlgorithm.js\";\nimport { unweightedSearchAlgorithm } from \"./algorithms/unweightedSearchAlgorithm.js\";\nimport { randomMaze, recursiveDivisionMaze } from './algorithms/mazeAlgorithms';\nimport { useThree } from 'react-three-fiber';\nimport * as tf from '@tensorflow/tfjs';\nimport { math } from '@tensorflow/tfjs';\n\n\n\n\nfunction Grid(props) {\n\n  let groundMaterial;\n  let groundMesh;\n  let mouseDownX = 0;\n  let mouseDownY = 0;\n  let previousHoverNodeId;\n  let currentHoverNodeId;\n\n  let mouseIsUp = true;\n\n  //const [mouseIsUp, setMouseIsUp] = useState(true);\n  \n  const [groundGeometry, setGroundGeometry] = useState(new THREE.PlaneGeometry(300,300,30,30));\n  \n  //const [runState, setRunState] = useState(props.worldProperties.runState);\n  const selectedAlgorithm = props.selectedAlgorithm;\n  const selectedMazeAlgorithm = props.selectedMazeAlgorithm;\n  const runState = props.worldProperties.runState;\n  const trainTheAgent = props.worldProperties.trainAgent;\n  const clearTheWalls = props.worldProperties.clearWalls; //rename this variable\n  const clearThePath = props.worldProperties.clearPath; // rename this variable too\n  const algorithmSpeed = props.algorithmSpeed;\n  const agentKnowledge = props.agentKnowledge;\n  const applyingSettings = props.applyingSettings;\n\n  const visualizeThePolicy = props.visualizeOptimalPolicy;\n  //const settingsConfig = props.settingsConfig;\n\n  //groundGeometry.rotateX(-Math.PI / 2)\n\n  const {\n    camera,\n  } = useThree();\n\n  useEffect(() => {\n    if(props.applyingSettings){\n      resetTerrainConfig();\n    }\n    if(props.visualizeOptimalPolicy){\n      calculateOptimalPolicy();\n      animateOptimalPolicy();\n      props.finishedOptimalPolicy();\n    }\n  },[applyingSettings, visualizeThePolicy]);\n\n\n\n  useEffect(() => {\n    /*if( props.applyingSettings=== true){\n      resetTerrainConfig();\n    }*/\n    if(props.agentKnowledge ===\"clearMemory\"){\n      terrain.records = [];\n      terrain.q_table = Array(props.worldProperties.rows).fill().map(() => Array(props.worldProperties.cols).fill(0));\n      //clearPath();\n      props.agentResetDone();\n    }\n    if(props.worldProperties.runState === true){\n      if(props.selectedAlgorithm.type === \"machine-learning\"){\n        animateQlearning()\n      }\n      else{\n      visualizeAlgorithm();\n      }\n    }\n    else if(props.worldProperties.clearWalls === true){\n      clearWalls();\n    }\n    else if(props.worldProperties.clearPath === true){\n      clearPath();\n    }\n    else if(props.worldProperties.trainAgent === true){\n      qLearning();\n    }\n    else if(props.selectedMazeAlgorithm === \"randomMaze\"){\n      clearPath();\n      let nodesToAnimate = [];\n      randomMaze(terrain.grid, nodesToAnimate, \"wall\");\n      animateMaze(nodesToAnimate, \"wall\", 30);\n    }\n    else if(props.selectedMazeAlgorithm === \"recursiveDivision\"){\n      clearPath();\n      let nodesToAnimate = [];\n      recursiveDivisionMaze(\n        terrain.grid, \n        2, \n        terrain.grid.length - 3,\n         2, \n         terrain.grid.length - 3, \n         \"horizontal\",\n         false,\n         nodesToAnimate,\n         \"wall\");\n\n         animateMaze(nodesToAnimate, \"wall\", 30)\n    }\n    //const algorithmSpeed = props.algorithmSpeed;\n    //console.log(algorithmSpeed);\n  }, [runState, clearTheWalls, clearThePath, selectedMazeAlgorithm, trainTheAgent,agentKnowledge,]);\n\n\n  const loader = useMemo(() => new THREE.TextureLoader().load(img,\n    function(texture){\n        texture.wrapS = THREE.RepeatWrapping;\n        texture.wrapT = THREE.RepeatWrapping;\n        texture.repeat.x = 30;\n        texture.repeat.y = 30;\n        groundMaterial = new THREE.MeshLambertMaterial({\n          map: texture,\n          side: THREE.FrontSide,\n          vertexColors: THREE.FaceColors,\n        });\n        groundMesh = new THREE.Mesh(groundGeometry, groundMaterial);\n\t\t\t\tgroundMesh.receiveShadow = true;\n    }), [img]);\n\n    \n    \n    groundMaterial = new THREE.MeshLambertMaterial({\n      map: loader,\n      side: THREE.FrontSide,\n      vertexColors: THREE.FaceColors,\n    });\n\n    const mesh = useRef(null);\n    \n    \n    const [terrain, setTerrain] = useState({\n      grid: initializeGrid(),\n      states: initStates(),\n      q_table: Array(props.worldProperties.rows).fill().map(() => Array(props.worldProperties.cols).fill(0)),\n      records: [],\n      optimalPolicy: [],\n      actions : { \"left\":[0,-1], \"down\":[1,0],\"right\":[0,1], \"up\":[-1,0]},\n      //visits: Array(props.worldProperties.rows).fill().map(() => Array(props.worldProperties.cols).fill(0)),\n      gamma: 0.8,\n      alpha: 0.1,\n      start: [props.settingsConfig.startRow,props.settingsConfig.startCol],\n      finish: [props.settingsConfig.finishRow,props.settingsConfig.finishCol]\n    });\n\n  function initializeGrid(){\n    let tempGrid = []\n    for(let i = 0; i < 30; i++){\n        let currentRow = [];\n        for(let j = 0; j < 30; j++){\n            let node = createNode(i, j);\n            currentRow.push(node);\n        }\n        tempGrid.push(currentRow);\n    }\n    /*var vertices = new Float32Array(5400).fill(0);\n\n    groundGeometry.setAttribute('color', new THREE.Float32BufferAttribute( vertices,3) );\n    vertices[0] = 0\n    vertices[1]= 1\n    vertices[2]= 0\n\n    \n\n    console.log(groundGeometry.getAttribute('color'))\n    const tween1 = new TWEEN.Tween(groundGeometry.getAttribute('color'))\n                    .to(new THREE.Float32BufferAttribute( vertices,2) ,9000)\n\n    tween1.start()\n\n    tween1.onUpdate(function (object: THREE.BufferAttribute | THREE.InterleavedBufferAttribute, elapsed: number){\n      groundGeometry.setAttribute('color',object)\n    })\n    \n   \n    //console.log(vertices)\n    groundGeometry.setAttribute('color', new THREE.Float32BufferAttribute( vertices,2) );*/\n\n    //setState(tempStateGrid)\n    renderLoop();\n   return tempGrid;\n  }   \n\n  function createNode(row, col){\n\n    let status = \"default\";\n    let faces = {};\n\n    let faceIndex = row * 2 * props.worldProperties.cols + col * 2 ;\n    //console.log(groundGeometry)\n  \n    faces[1] = groundGeometry.faces[faceIndex];\n\n\n    faceIndex = faceIndex % 2 === 0 ? faceIndex + 1 : faceIndex - 1;\n    faces[2] = groundGeometry.faces[faceIndex];\n\n    if(row === props.worldProperties.start.row && col === props.worldProperties.start.col){\n      status = \"start\";\n    }\n    else if(row === props.worldProperties.finish.row && col === props.worldProperties.finish.col){\n      status = \"finish\";\n    }\n    let node = {\n        id: row * props.worldProperties.cols + col,\n        row: row,\n        col: col,\n        faces: faces,\n        status: status,\n        distance: Infinity,\n        totalDistance: Infinity,\n        heuristicDistance: null,\n        direction: null,\n        weight: 0,\n        qValue: 0,\n        reward: 0,\n        visits: 0,\n        onceSpecial: false,\n        previousNode: null,\n    };\n    if(status === \"start\"){\n      node.onceSpecial = true;\n      tweenToColor(node, groundGeometry, [props.worldProperties.colors.start]);\n      \n    }\n    else if(status === \"finish\"){\n      node.reward = 100;\n      node.onceSpecial = true;\n      tweenToColor(node, groundGeometry, [props.worldProperties.colors.finish]);\n    }\n    return node;\n  }\n  function initStates(){\n    let tempStateGrid = [];\n    for(let row = 0; row < props.worldProperties.rows; row++){\n      for(let col = 0; col < props.worldProperties.cols;col++){\n        tempStateGrid.push([row,col]);\n      }\n    }\n    //console.log(tempStateGrid)\n    return tempStateGrid;\n  }\n  /*function initializeVisits(){\n    let visits = {}\n    let tempStates = initStates()\n    for(let row = 0; row < tempStates.length; row++){\n      for(let col = 0; col < tempStates[0].length; col++){\n        let state = tempStates[row][col]\n        visits[state] = 0;\n      }\n    }\n    return visits;\n  }*/\n\n  function renderLoop(){\n    window.requestAnimationFrame(renderLoop);\n    //if(props.resetStatus){\n      hoverLoop();\n   // }\n    TWEEN.update();\n  }\n\n  function hoverLoop(){\n    if(mouseIsUp || currentHoverNodeId === previousHoverNodeId){\n      return;\n    }\n    else{\n      previousHoverNodeId = currentHoverNodeId;\n      let nodeRow = Math.floor(currentHoverNodeId / props.worldProperties.rows);\n      let nodeCol = currentHoverNodeId % props.worldProperties.cols\n      if((nodeRow === props.worldProperties.start.row && nodeCol === props.worldProperties.start.col) \n        || (nodeRow === props.worldProperties.finish.row && nodeCol === props.worldProperties.finish.col)){\n        return;\n      }\n      else if(terrain.grid[nodeRow][nodeCol].status === \"wall\"){\n        terrain.grid[nodeRow][nodeCol].status = \"default\";\n       terrain.grid[nodeRow][nodeCol].reward = 0;\n        terrain.grid[nodeRow][nodeCol].visits = 0;\n        tweenToColor(terrain.grid[nodeRow][nodeCol], groundGeometry, [props.worldProperties.colors.default]);\n      }\n      else\n      {\n        terrain.grid[nodeRow][nodeCol].status = \"wall\";\n        terrain.grid[nodeRow][nodeCol].visits = -1;\n       terrain.grid[nodeRow][nodeCol].reward = -100;\n        tweenToColor(terrain.grid[nodeRow][nodeCol], groundGeometry, [props.worldProperties.colors.wall]);\n      }\n    \n    }\n    //get coordinates of node i just clicked on\n    \n  }\n\n  function mouseUpHandler(event){\n    if((mouseDownX !== event.clientX) || (mouseDownY !== event.clientY)){\n      return;\n    }\n    else\n    {\n      let nodeId = findNodeId(event.faceIndex);\n      if((nodeId.nodeRow === props.worldProperties.start.row && nodeId.nodeCol === props.worldProperties.start.col) \n        || (nodeId.nodeRow === props.worldProperties.finish.row && nodeId.nodeCol === props.worldProperties.finish.col)){\n      return;\n      }\n      else if(terrain.grid[nodeId.nodeRow][nodeId.nodeCol].status === \"wall\"){\n        terrain.grid[nodeId.nodeRow][nodeId.nodeCol].reward = 0;\n        terrain.grid[nodeId.nodeRow][nodeId.nodeCol].status = \"default\";\n        tweenToColor(terrain.grid[nodeId.nodeRow][nodeId.nodeCol], groundGeometry, [props.worldProperties.colors.default]);\n        //console.log(terrain.grid[nodeId.nodeRow][nodeId.nodeCol]);\n      }\n      else\n      {\n        terrain.grid[nodeId.nodeRow][nodeId.nodeCol].reward = -100;\n        terrain.grid[nodeId.nodeRow][nodeId.nodeCol].status = \"wall\";\n        tweenToColor(terrain.grid[nodeId.nodeRow][nodeId.nodeCol], groundGeometry, [props.worldProperties.colors.wall]);\n        //console.log(terrain.grid[nodeId.nodeRow][nodeId.nodeCol]);\n      }\n      //console.log(terrain.grid)\n    }\n\n  }\n    \n  \n  function findNodeId(faceIndex){\n    let linearIndex = Math.floor(faceIndex / 2);\n    return {\n      nodeRow: Math.floor(linearIndex / props.worldProperties.rows),\n      nodeCol: linearIndex % props.worldProperties.cols,\n    }\n  }\n  function mouseDownHandler(event){\n      mouseDownX = event.clientX;     //set X and Y mouse coordinates when mouseDown\n      mouseDownY = event.clientY;\n  }\n  \n  function visualizeAlgorithm(){\n    console.log(\"Dijkstra Dijkstra Dijkstra\");\n    clearPath();\n    let nodesToAnimate = [];\n    let processedSuccessfuly;\n    const startNode = terrain.grid[props.worldProperties.start.row][props.worldProperties.start.col];\n    const finishNode = terrain.grid[props.worldProperties.finish.row][props.worldProperties.finish.col];\n    if(selectedAlgorithm.type === \"weighted\"){\n      processedSuccessfuly = weightedSearchAlgorithm(\n        terrain.grid,\n        startNode,\n        finishNode,\n        nodesToAnimate,\n        selectedAlgorithm.algorithm,\n        selectedAlgorithm.heuristic,\n      );\n      console.log(processedSuccessfuly);\n    }\n    else{\n      processedSuccessfuly = unweightedSearchAlgorithm(\n        terrain.grid,\n        startNode,\n        finishNode,\n        nodesToAnimate,\n        selectedAlgorithm.algorithm,\n      );\n    }\n    const nodesInShortestPathOrder = getNodesInShortestPathOrder(finishNode);\n    //add conditions for unweighted and no paths found\n    //console.log(algorithmSpeed + \" is the speed were using\")\n    animateAlgorithm(nodesToAnimate, nodesInShortestPathOrder, algorithmSpeed);\n    \n    \n  }\n  function animateAlgorithm(visitedNodesInOrder, nodesInShortestPathOrder, timerDelay){\n    for (let i = 0; i <= visitedNodesInOrder.length; i++) {\n\t\t\t\tif (i === visitedNodesInOrder.length) {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tanimateShortestPath(nodesInShortestPathOrder, 5 * timerDelay);\n\t\t\t\t\t}, timerDelay * i);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif ((visitedNodesInOrder[i].row === props.worldProperties.start.row &&\n            visitedNodesInOrder[i].col === props.worldProperties.start.col) ||\n\t\t\t\t\t(visitedNodesInOrder[i].row === props.worldProperties.finish.row &&\n\t\t\t\t\t\tvisitedNodesInOrder[i].col === props.worldProperties.finish.col)\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tconst node = visitedNodesInOrder[i];\n\t\t\t\t\tif (!node) return;\n\t\t\t\t\ttweenToColor(\n\t\t\t\t\t\tnode,\n\t\t\t\t\t\tgroundGeometry,\n\t\t\t\t\t\t[{ r: 1.0, g: 0.321, b: 0.784 }, props.worldProperties.colors.visited],\n\t\t\t\t\t\t300,\n\t\t\t\t\t\t{ position: false }\n\t\t\t\t\t);\n\t\t\t\t}, timerDelay * i);\n      }\n      \n  }\n  function animateShortestPath(nodesInShortestPathOrder, timerDelay){\n    for (let i = 0; i < nodesInShortestPathOrder.length; i++) {\n      setTimeout(() => {\n        const node = nodesInShortestPathOrder[i];\n        tweenToColor(node, groundGeometry, [props.worldProperties.colors.path], undefined, {\n          position: false,\n        });\n        if (i === nodesInShortestPathOrder.length - 1) {\n                }\n      }, timerDelay * i);\n    }\n    props.updateRunState(false);\n    //console.log(terrain.grid[5][5]);\n  }\n\n  function animateQlearning(){\n    clearPath();\n    let minimum = -10;\n    let maximum = 100;\n    for(let i = 0; i < terrain.records.length;i++){\n      //let record = terrain.records[i]\n      if(i > 1200){return;}\n      for(let row = 0; row < 30; row++){\n        for(let col = 0; col < 30; col++){ \n          const node = terrain.grid[row][col];\n          if(terrain.records[i][row][col] === 0 || node.status === \"wall\" || node.status === \"start\" || node.status === \"finish\"){continue;}\n          let ratio = 2 * (terrain.records[i][row][col]-minimum) / (maximum - minimum)\n          let blue = Number(Math.max(0, 255*(1 - ratio)))\n          let red = Number(Math.max(0, 255*(ratio - 1)))\n          let green = 255 - blue - red\n\n          red /= 255;\n          green /= 255;\n          blue /= 255;\n          \n          setTimeout(() => {\n            tweenToColor(node, groundGeometry, [{r: red, g: green, b: blue}], 30,{position: false});\n            //if (row === 30 - 1) {}\n          }, 6000);\n        }\n      }\n    }\n    props.updateRunState(false);\n  }\n  function animateOptimalPolicy(){\n    for(let i = 3; i < terrain.optimalPolicy.length;i++){\n      let headRow = terrain.optimalPolicy[i][0];\n      let headCol = terrain.optimalPolicy[i][1];\n      //let torsoRow = terrain.optimalPolicy[i-1][0];\n      //let torsoCol = terrain.optimalPolicy[i-1][1];\n      let tailRow = terrain.optimalPolicy[i-1][0];\n      let tailCol = terrain.optimalPolicy[i-1][1];\n\n      const head = terrain.grid[headRow][headCol];\n      //const torso = terrain.grid[torsoRow][torsoCol];\n      const tail = terrain.grid[tailRow][tailCol];\n      if (head.status === 'start'|| tail.status == 'start'){continue;}\n\n\n      setTimeout(() => {\n        if (head.status === 'finish' ) return;\n        //terrain.grid[row][col].status = visited;\n        \n        setTimeout(() => {\n        tweenToColor(tail, groundGeometry, [props.worldProperties.colors.path], undefined,{position: false});\n        }, i*props.algorithmSpeed);\n\n\n        tweenToColor(tail, groundGeometry, [props.worldProperties.colors.path], undefined,{position: false});\n        tweenToColor(head, groundGeometry, [{r: 0, g: 0, b: 0}], undefined,{position: false});\n        //tweenToColor(torso, groundGeometry, [{r: 0, g: 0, b: 0}], undefined,{position: false});\n\n      }, 2*i*props.algorithmSpeed);\n\n    }\n  }\n  function qLearning(){\n    //reset records\n    if(props.settingsConfig.epochs > 0){\n      terrain.records = [];\n    }\n    let i = 0;\n    while(i < props.settingsConfig.epochs){\n      if(terrain.records.length > 1200){break;}\n      if(i > 0.55*props.epochs){\n        let y = props.settingsConfig.startRow;\n        let x = props.settingsConfig.startCol;\n        var currentState = [y,x];\n      }\n      else{\n        var currentState = terrain.states[Math.floor(Math.random() * terrain.states.length)]\n      }\n      while(!(currentState[0] === props.settingsConfig.finishRow && currentState[1] === props.settingsConfig.finishCol)\n        && terrain.grid[currentState[0]][currentState[1]].status !== \"wall\"){\n        \n          //setTimeout(() => {\n           //tweenToColor(terrain.grid[14][14],groundGeometry,[{ r: 1, g: 0.64, b: 0.0}]);\n          //}, props.algorithmSpeed);\n          \n          let action = chooseAction(currentState)\n          let action_dy = terrain.actions[action][0]\n\t\t\t\t  let action_dx = terrain.actions[action][1]\n\t\t\t\t  let nextState = [action_dy + currentState[0], action_dx + currentState[1]]\n\n\n          let currentQValue = terrain.q_table[currentState[0]][currentState[1]]\n\t\t\t\t  //let maximum_action = chooseAction(currentState)\n\t\t\t\t\n          //action_dy = terrain.actions[maximum_action][0]\n\t\t\t\t  //action_dx = terrain.actions[maximum_action][1]\n\n\t\t\t\t  let maxState = [action_dy + currentState[0], action_dx + currentState[1]]\n\t\t\t\t  let maxQValue = terrain.q_table[maxState[0]][maxState[1]]\n\n          let temporal_difference = terrain.grid[nextState[0]][nextState[1]] .reward + (terrain.gamma * ( maxQValue - currentQValue)) \n\t\t\t\t  let learning_rate = terrain.alpha / (1 + terrain.grid[currentState[0]][currentState[1]].visits)\n\n          let q_value = currentQValue + (props.settingsConfig.learningRate * temporal_difference)\n\t\t\t\t  terrain.q_table[currentState[0]][currentState[1]] = parseFloat(q_value.toFixed(2))\n\n          terrain.grid[currentState[0]][currentState[1]].visits+=1;\n          currentState = nextState;\n          i++;\n\n        }\n        terrain.records.push(getRecord())\n    }\n    props.stopTraining();\n    console.log(terrain.records)\n    //console.log(terrain.grid)\n  }\n  function chooseAction(currentState,e_greedy = props.settingsConfig.agentCuriosity){\n    var rwc = require(\"random-weighted-choice\");\n    let actionOptions = [\n      {weight: e_greedy * 10, id: \"true\"},\n      {weight: 10*(1 - e_greedy), id: \"false\"}\n    ];\n    let chosenOption = rwc(actionOptions)\n    let takingRandomAction = (chosenOption === \"true\");//true or false;\n    let actions = [\"left\",\"down\",\"right\",\"up\"];\n    \n    if(takingRandomAction){\n      //console.log(\"Taking random action\");\n      //let random_index = random.randint(0,len(actions) - 1)\n      while(true){\n        let randomIndex = Math.floor(Math.random() * actions.length)\n\t\t\t  let selectedAction = actions[randomIndex]\n\t\t\t  let actionChange = terrain.actions[selectedAction]\n        if(isValidState([actionChange[0] + currentState[0],actionChange[1] + currentState[1]])){\n          //console.log(\"When action is random action is: \" + selectedAction)\n          return selectedAction;\n        }\n      }\n    }\n    else{\n      //console.log(\"Taking greedy action\");\n      //let policyCandidates = new WeakMap();\n      let policyCandidates = {};\n      for(let action in terrain.actions){\n        let nextState = [terrain.actions[action][0]+currentState[0],terrain.actions[action][1]+currentState[1]]\n        //console.log(nextState)\n        if (isValidState(nextState)){\n\t\t\t\t  //console.log(terrain.q_table);\n\t\t\t\t\tpolicyCandidates[nextState] = terrain.q_table[nextState[0]][nextState[1]]\n          //policyCandidates.set(nextState,terrain.q_table[nextState[1]][nextState[0]]);\n        }\n      }\n      //let maxState = max(policy_candidates, key=policy_candidates.get)\n      let maxQValue = Number(Object.keys(policyCandidates).reduce((a, v) => Math.max(a, policyCandidates[v]), -Infinity));\n      let maxState = Object.keys(policyCandidates).filter(v => policyCandidates[v] === maxQValue);\n\n\t\t\t//let maxQValue = policy_candidates[maxState]\n\t\t\tlet listOfMax = [];\n      for(let maxCandidate in policyCandidates){\n        if(policyCandidates[maxCandidate] === maxQValue){\n          let tempVals = maxCandidate.split(\",\").map(Number)\n          listOfMax.push(tempVals);\n        }\n      }\n      let randomIndex = Math.floor(Math.random() * listOfMax.length);\n\t\t\tmaxState = listOfMax[randomIndex];\n      //Now we can use the max_state(state with the maximum q value to find the actioned perfomed to get there)\n\t\t\tlet action_dy = maxState[0] - currentState[0];\n\t\t\tlet action_dx = maxState[1] - currentState[1];\n\n      for(let action in terrain.actions){\n        if(terrain.actions[action][0] === action_dy && terrain.actions[action][1] === action_dx){\n          return action;\n        }\n      }\n    }\n\n  }\n  function isValidState(nextState){\n    //console.log(nextState)\n    if (nextState[0] < 0 || nextState[0] >= props.worldProperties.rows || \n        nextState[1] < 0 || nextState[1] >= props.worldProperties.cols){return false;}\n\t\treturn true\n  }\n  function getRecord(){\n    var record =  Array(props.worldProperties.rows).fill().map(() => Array(props.worldProperties.cols).fill(0))\n    for(let i = 0; i < terrain.states.length; i++){\n      let state = terrain.states[i]\n\t\t\trecord[state[0]][state[1]] = terrain.q_table[state[0]][state[1]]\n    }\n    //console.log(record)\n    return record;\n  }\n  function resetTerrainConfig(){\n    for(let row = 0; row < 30; row++){\n      for(let col = 0; col < 30; col++){\n        if(terrain.grid[row][col].status === \"wall\"){\n          continue;\n        }\n        if(row === props.settingsConfig.startRow && col  === props.settingsConfig.startCol){\n          terrain.grid[row][col].status = \"start\";\n          terrain.grid[row][col].onceSpecial = true;\n        }\n        else if(row === props.settingsConfig.finishRow && col === props.settingsConfig.finishCol){\n          terrain.grid[row][col].status = \"finish\";\n          terrain.grid[row][col].reward = 100;\n          terrain.grid[row][col].onceSpecial = true;\n\n        }\n        else{\n          terrain.grid[row][col].status = \"default\";\n          terrain.grid[row][col].reward = 0;\n          if(terrain.grid[row][col].onceSpecial){\n          tweenToColor(terrain.grid[row][col], groundGeometry, [props.worldProperties.colors.default]);\n          }\n\n        }\n      }\n    }\n    //console.log(terrain.records)\n    props.finishApplyingSettings();\n  }\n\n  function calculateOptimalPolicy(){\n    let currentState = [props.settingsConfig.startRow, props.settingsConfig.startCol];\n    let policyList = [];\n    policyList.push(currentState);\n    \n    while(!(currentState[0] === props.settingsConfig.finishRow && currentState[1] === props.settingsConfig.finishCol)\n    && terrain.grid[currentState[0]][currentState[1]].status !== \"wall\"){\n      let maxAction = chooseAction(currentState,props.settingsConfig.agentCuriosity);\n      let action_dy = terrain.actions[maxAction][0];\n      let action_dx = terrain.actions[maxAction][1];\n\n      let nextState = [action_dy + currentState[0], action_dx + currentState[1]];\n      policyList.push(nextState);\n      currentState = nextState;\n      //console.log(maxAction);\n      //console.log(action_dy);\n    }\n    terrain.optimalPolicy = policyList;\n\n    \n  }\n\n  function clearWalls(){\n    for(let i = 0; i < props.worldProperties.rows; i++){\n      for(let j = 0; j < props.worldProperties.cols; j++){\n        if(terrain.grid[i][j].status === \"wall\"){\n          terrain.grid[i][j].status = \"default\";\n          terrain.grid[i][j].reward = 0;\n          tweenToColor(terrain.grid[i][j], groundGeometry, [props.worldProperties.colors.default])\n        }\n      }\n    }\n    props.stopClearWalls();\n  }\n  function clearPath(){\n    TWEEN.removeAll();\n    for(let i = 0; i < props.worldProperties.rows; i++){\n      for(let j = 0; j < props.worldProperties.cols; j++){\n        if(i === props.worldProperties.start.row && j === props.worldProperties.start.col){\n          terrain.grid[i][j].status = \"start\";\n          terrain.grid[i][j].visits = -1; \n        }\n        if(i === props.worldProperties.finish.row && j === props.worldProperties.finish.col){\n          terrain.grid[i][j].status = \"finish\"; \n        }\n        \n        if(terrain.grid[i][j].status === \"visited\" || terrain.grid[i][j].visits > 0){\n          terrain.grid[i][j].status = \"default\";\n          tweenToColor(terrain.grid[i][j], groundGeometry, [props.worldProperties.colors.default]);\n        }\n        terrain.grid[i][j].distance = Infinity;\n        terrain.grid[i][j].totalDistance = Infinity;\n        terrain.grid[i][j].heuristicDistance = null;\n        terrain.grid[i][j].direction = null;\n        terrain.grid[i][j].previousNode = null;\n      }\n    }\n    props.stopClearPath();\n  }\n  function animateMaze(nodesToAnimate, type, timerDelay){\n    clearWalls();\n    for(let i = 0; i < nodesToAnimate.length; i++){\n      let nodeRow = nodesToAnimate[i].row;\n      let nodeCol = nodesToAnimate[i].col\n      setTimeout(() => {\n        //const node = nodesToAnimate[i];\n       // node.status = type;\n       terrain.grid[nodeRow][nodeCol].status = \"wall\";\n       terrain.grid[nodeRow][nodeCol].reward = -100;\n       terrain.grid[nodeRow][nodeCol].visits = -1;\n      tweenToColor(terrain.grid[nodeRow][nodeCol], groundGeometry, [props.worldProperties.colors.wall]);\n      }, timerDelay * i);\n      props.stopMazeSelection();\n    }\n  }\n \n  return (\n    <mesh ref = {mesh} position = {[0,0,0]}>\n      <gridHelper args = {[300, props.gridDimensions, 0x5c78bd, 0x5c78bd] }/>\n      <mesh rotation={[-Math.PI /2, 0, 0]} \n        position={[0,-0.1,0]} \n        receiveShadow = {true}\n        onPointerDown={ (e) => {\n          mouseIsUp = false;\n          mouseDownHandler(e)\n        }}\n      onPointerUp = {e => {\n        if(props.resetStatus === true || mouseIsUp === true){\n          mouseIsUp = true;\n        }\n        mouseUpHandler(e)\n      }}\n      onPointerMove = {e => {\n        if(mouseIsUp === true || props.resetStatus === false){\n          return;\n        }\n        else if(mouseIsUp === false){\n          currentHoverNodeId = Math.floor(e.faceIndex/2);\n          return;\n        }\n      }}\n      >\n      <primitive attach = 'geometry' object = {groundGeometry}  />  \n      <primitive attach = 'material' object = {groundMaterial}  />   \n      </mesh>\n      <axesHelper />\n    </mesh>\n    )\n}\n\n\nexport default Grid\n","export function unweightedSearchAlgorithm(grid, start, target, nodesToAnimate, name) {\n    let structure = [start];\n    let exploredNodes = {start: true};\n    while (structure.length) {\n      let currentNode = name === \"BFS\" ? structure.shift() : structure.pop();\n      nodesToAnimate.push(currentNode);\n      if (name === \"DFS\") exploredNodes[currentNode.id] = true;\n          currentNode.status = \"visited\";\n          // Ending condition\n          if (currentNode.id === target.id) return \"success!\";\n          // Update neighbors\n      let currentNeighbors = getNeighbors(currentNode, grid, name);\n      currentNeighbors.forEach(neighbor => {\n        if (!exploredNodes[neighbor.id]) {\n          if (name === \"BFS\") exploredNodes[neighbor.id] = true;\n                  if(neighbor.id !== start.id) {\n                      neighbor.previousNode = currentNode;\n                  }\n          structure.push(neighbor);\n        }\n          });\n    }\n    return false;\n  }\n  \n  function getNeighbors(node, grid, name) {\n      const neighbors = [];\n      const {col, row} = node;\n      let neighbor;\n      if (row > 0) {\n          neighbor = grid[row - 1][col];\n          if (name === \"BFS\") {\n              neighbors.push(neighbor);\n          } else {\n              neighbors.unshift(neighbor);\n          }\n      }\n      if (row < grid.length - 1) {\n          neighbor = grid[row + 1][col];\n          if (name === \"BFS\") {\n              neighbors.push(neighbor);\n          } else {\n              neighbors.unshift(neighbor);\n          }\n      }\n      if (col > 0) {\n          neighbor = grid[row][col - 1];\n          if (name === \"BFS\") {\n              neighbors.push(neighbor);\n          } else {\n              neighbors.unshift(neighbor);\n          }\n      }\n      if (col < grid[0].length - 1) {\n          neighbor = grid[row][col + 1];\n          if (name === \"BFS\") {\n              neighbors.push(neighbor);\n          } else {\n              neighbors.unshift(neighbor);\n          }\n      }\n      return neighbors.filter(neighbor => neighbor.stutus !== \"visited\");\n  }","import React from 'react'\n\nfunction Floor() {\n    return (\n        <mesh rotation={[-Math.PI /2, 0, 0]} position={[0, -3, -5]}>\n         <planeBufferGeometry attach = 'geometry' args = {[5000, 5000, 30, 30]} />\n        <meshStandardMaterial attach = 'material' color=\"white\"/>    \n        </mesh>\n    )\n}\n\nexport default Floor\n","import { OrbitControls } from 'drei';\nimport React, {useEffect, useRef } from 'react';\nimport { useThree } from 'react-three-fiber';\nimport TWEEN from '@tweenjs/tween.js';\n\n\nfunction Controls(props) {\n    const resetStatus = props.resetStatus;\n    const {\n        camera,\n    } = useThree();\n\n    const controls = useRef();\n\n\n\n    useEffect(() => {\n        if(props.resetStatus === true){\n            resetCamera();\n        }\n    }, [resetStatus]);\n\n    function resetCamera() {\n\n            TWEEN.removeAll();\n\t\t\tnew TWEEN.Tween(camera.position)\n\t\t\t\t.to({ x: 0, y: 385, z: 0 }, 2000)\n\t\t\t\t.easing(TWEEN.Easing.Exponential.Out)\n\t\t\t\t.onComplete(() => {\n                    controls.current.update();\n\t\t\t\t})\n\t\t\t\t.start();\n                \n    } \n\n    return (\n        <OrbitControls ref = {controls} enableRotate = {!props.resetStatus}/>\n    )\n}\n\nexport default Controls\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"info\",\n  transform: \"translate(-24 -4)\"\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"bg\",\n  width: 51,\n  height: 51,\n  transform: \"translate(24 4)\",\n  fill: \"rgba(255,255,255,0)\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  id: \"Path_82\",\n  \"data-name\": \"Path 82\",\n  d: \"M32.59,22.7H22.438v4.866h2.685v20.3H32.59Z\",\n  transform: \"translate(21.741 1.766)\",\n  fill: \"#fff\",\n  stroke: \"#fff\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  strokeWidth: 2\n}), /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Ellipse_3\",\n  \"data-name\": \"Ellipse 3\",\n  transform: \"translate(45 9)\",\n  fill: \"#fff\",\n  stroke: \"#fff\",\n  strokeWidth: 2\n}, /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 5.5,\n  cy: 5.5,\n  r: 5.5,\n  stroke: \"none\"\n}), /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 5.5,\n  cy: 5.5,\n  r: 4.5,\n  fill: \"none\"\n})));\n\nfunction SvgInfo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 51,\n    height: 51,\n    viewBox: \"0 0 51 51\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgInfo);\nexport default __webpack_public_path__ + \"static/media/info.d2873f8e.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport {  AwesomeButton, AwesomeButtonSocial } from 'react-awesome-button';\nimport \"react-awesome-button/dist/styles.css\";\nimport { ReactComponent as InfoLogo } from '../assets/info.svg';\n\nfunction Tutorial(props) {\n    //function color_to_RGB_string(color){\n\t//\treturn `rgb(${color.r*255}, ${color.g*255}, ${color.b*255})`;\n    //}\n\n    return (\n        <div className = \"info_container\">\n            <h1 id = \"info_title\">Pathfinder Visualizer Information</h1>\n            <div className = \"legend_table\">\n            <table>\n              <tbody>\n                <tr>\n                    <td>\n                    <div className=\"start_square\" ></div>\n                    </td>\n                    <td>Start Node</td>\n                </tr>\n                <tr>\n                    <td>\n                    <div className=\"finish_square\" ></div>\n                    </td>\n                    <td>Finish Node</td>\n                </tr>\n                <tr>\n                    <td>\n                    <div className=\"visited_square\" ></div>\n                    </td>\n                    <td>Visited Node</td>\n                </tr>\n                <tr>\n                    <td>\n                    <div className=\"path_square\" ></div>\n                    </td>\n                    <td>Path Node</td>\n                </tr>\n              </tbody>\n            </table>\n            </div>\n            <div className = \"info_buttons\">\n                <div className = \"info_socials\" id = \"tutorial_button\">\n                    <AwesomeButton\n                        type=\"secondary\"\n                        size = \"small\"\n                    >\n                        Tutorial\n                    </AwesomeButton>\n                </div>\n                <div className = \"info_socials\" id = \"gh_button\">\n                    <AwesomeButtonSocial\n                        type=\"github\"\n                        url=\"https://github.com/zmaqutu/3D-Pathfinding-Visualizer\"\n                        size = \"small\"\n                    >\n                    </AwesomeButtonSocial>\n                </div>\n                <div className = \"info_socials\" id = \"linkedin\">\n                    <AwesomeButtonSocial\n                        type=\"linkedin\"\n                        url=\"https://www.linkedin.com/in/zmaqutu/\"\n                        size = \"small\"\n                    >\n                        LinkedIn\n                    </AwesomeButtonSocial>\n                </div>\n                <div className = \"info_socials\" id = \"buy_me_a_coffee\">\n                    <AwesomeButton\n                        type=\"secondary\"\n                        url=\"https://www.linkedin.com/in/zmaqutu/\"\n                        size = \"large\"\n                    >\n                        About this project\n                    </AwesomeButton>\n                </div>\n                <InfoLogo id = \"info_icon\"/>\n            </div>\n        </div>\n    )\n}\n\nexport default Tutorial\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"g\", null);\n\nfunction SvgSettings(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 392.533 392.533\",\n    style: {\n      enableBackground: \"new 0 0 392.533 392.533\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#56ACE0\"\n    },\n    d: \"M326.363,163.491c-3.168-12.671-8.21-24.76-14.933-36.008c-1.939-3.232-2.069-7.24-0.323-10.667 l18.101-34.521l-18.941-18.941l-34.521,18.101c-3.426,1.745-7.434,1.616-10.667-0.323c-11.184-6.723-23.337-11.766-36.008-14.933 c-3.685-0.905-6.659-3.685-7.758-7.37l-11.572-37.107h-26.764l-11.572,37.172c-1.164,3.62-4.073,6.4-7.758,7.37 c-12.671,3.168-24.76,8.21-36.008,14.933c-3.232,1.939-7.24,2.069-10.667,0.323L82.452,63.418L63.511,82.36l18.101,34.521 c1.745,3.426,1.616,7.434-0.323,10.667c-6.723,11.184-11.766,23.337-14.933,36.008c-0.905,3.685-3.685,6.659-7.37,7.758 l-37.172,11.572v26.764l37.172,11.572c3.62,1.164,6.4,4.073,7.37,7.758c3.168,12.671,8.21,24.824,14.933,36.008 c1.939,3.232,2.069,7.24,0.323,10.667l-18.101,34.521l18.941,18.941l34.521-18.101c3.297-1.745,7.434-1.616,10.667,0.323 c11.184,6.723,23.337,11.766,36.008,14.933c3.685,0.905,6.659,3.685,7.758,7.37l11.572,37.172h26.764l11.572-37.172 c1.164-3.62,4.073-6.4,7.758-7.37c12.671-3.168,24.824-8.21,36.008-14.933c3.232-1.939,7.24-2.069,10.667-0.323l34.521,18.101 l18.941-18.941l-18.101-34.521c-1.745-3.426-1.616-7.434,0.323-10.667c6.723-11.184,11.766-23.337,14.933-36.008 c0.905-3.685,3.685-6.659,7.37-7.758l37.172-11.572v-26.764l-37.172-11.572C330.048,170.15,327.268,167.24,326.363,163.491z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#FFC10D\"\n    },\n    d: \"M196.359,106.085c-49.713,0-90.182,40.404-90.182,90.182c0,19.846,6.594,38.141,17.455,53.075 c7.499-20.945,27.539-35.943,51.071-35.943h43.572c23.402,0,43.378,14.933,50.941,35.685c10.796-14.933,17.325-33.164,17.325-52.945 C286.541,146.554,246.072,106.085,196.359,106.085z M196.359,200.275c-22.044,0-39.952-17.907-39.952-39.952 s17.907-39.951,39.952-39.951s39.952,17.907,39.952,39.951S218.404,200.275,196.359,200.275z\"\n  }), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    d: \"M217.628,235.184h-42.214c-18.23,0-33.099,14.739-33.164,32.97 c15.063,11.378,33.875,18.23,54.174,18.23c20.428,0,39.24-6.853,54.368-18.36C250.533,249.923,235.794,235.184,217.628,235.184z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#FFFFFF\"\n    },\n    d: \"M196.359,142.093c-10.02,0-18.166,8.145-18.166,18.166s8.145,18.166,18.166,18.166 s18.166-8.145,18.166-18.166C214.525,150.303,206.38,142.093,196.359,142.093z\"\n  })), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#194F82\"\n    },\n    d: \"M196.359,120.307c-22.044,0-39.952,17.907-39.952,39.952s17.907,39.952,39.952,39.952 s39.952-17.907,39.952-39.952S218.404,120.307,196.359,120.307z M196.359,178.424c-10.02,0-18.166-8.145-18.166-18.166 s8.145-18.166,18.166-18.166s18.166,8.145,18.166,18.166S206.38,178.424,196.359,178.424z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#194F82\"\n    },\n    d: \"M384.998,164.525l-39.111-12.283c-3.103-10.602-7.37-20.881-12.671-30.513l19.006-36.331 c2.263-4.267,1.422-9.438-1.939-12.735l-30.319-30.319c-3.426-3.426-8.598-4.202-12.735-1.939L270.897,59.41 c-9.762-5.301-19.911-9.568-30.513-12.671L228.165,7.628C226.679,3.038,222.477,0,217.757,0h-42.731 c-4.784,0-8.986,3.103-10.408,7.628l-12.283,39.111c-10.602,3.103-20.881,7.37-30.513,12.671L85.491,40.404 c-4.267-2.263-9.438-1.422-12.735,1.939L42.436,72.663c-3.426,3.426-4.202,8.598-1.939,12.735l19.006,36.331 c-5.301,9.762-9.568,19.911-12.671,30.513L7.721,164.461c-4.59,1.487-7.628,5.689-7.628,10.408V217.6 c0,4.784,3.103,8.986,7.628,10.408l39.111,12.283c3.103,10.602,7.37,20.881,12.671,30.513l-19.006,36.331 c-2.263,4.267-1.422,9.438,1.939,12.735l30.319,30.319c3.426,3.426,8.598,4.202,12.735,1.939l36.331-19.006 c9.762,5.301,19.911,9.568,30.513,12.671l12.218,39.111c1.422,4.59,5.624,7.628,10.408,7.628h42.731 c4.784,0,8.986-3.103,10.408-7.628l12.218-39.111c10.602-3.103,20.881-7.37,30.513-12.671l36.331,19.006 c4.267,2.263,9.438,1.422,12.735-1.939l30.19-30.19c3.426-3.426,4.202-8.598,1.939-12.735l-19.006-36.331 c5.301-9.762,9.568-19.911,12.671-30.513l39.111-12.218c4.59-1.422,7.628-5.624,7.628-10.408v-42.731 C392.626,170.15,389.523,165.883,384.998,164.525z M370.84,209.649l-37.172,11.572c-3.62,1.164-6.4,4.073-7.37,7.758 c-3.168,12.671-8.21,24.76-14.933,36.008c-1.939,3.232-2.069,7.24-0.323,10.667l18.101,34.521l-18.941,18.941l-34.521-18.101 c-3.426-1.745-7.434-1.616-10.667,0.323c-11.184,6.723-23.337,11.766-36.008,14.933c-3.685,0.905-6.659,3.685-7.758,7.37 l-11.572,37.172h-26.764l-11.572-37.172c-1.164-3.62-4.073-6.4-7.758-7.37c-12.671-3.168-24.824-8.21-36.008-14.933 c-3.232-1.939-7.24-2.069-10.667-0.323l-34.521,18.101l-18.941-18.941l18.101-34.521c1.745-3.426,1.616-7.434-0.323-10.667 c-6.723-11.184-11.766-23.337-14.933-36.008c-0.905-3.685-3.685-6.659-7.37-7.758l-37.172-11.572v-26.764l37.172-11.572 c3.62-1.164,6.4-4.073,7.37-7.758c3.168-12.671,8.21-24.824,14.933-36.008c1.939-3.232,2.069-7.24,0.323-10.667L63.446,82.36 l18.941-18.941l34.521,18.101c3.426,1.745,7.434,1.616,10.667-0.323c11.184-6.723,23.337-11.766,36.008-14.933 c3.685-0.905,6.659-3.685,7.758-7.37l11.572-37.172h26.764l11.572,37.172c1.164,3.62,4.073,6.4,7.758,7.37 c12.671,3.168,24.76,8.21,36.008,14.933c3.232,1.939,7.24,2.069,10.667,0.323l34.521-18.101l18.941,18.941l-18.101,34.521 c-1.745,3.426-1.616,7.434,0.323,10.667c6.723,11.184,11.766,23.337,14.933,36.008c0.905,3.685,3.685,6.659,7.37,7.758 l37.172,11.572V209.649z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#194F82\"\n    },\n    d: \"M196.359,84.299c-61.737,0-111.968,50.23-111.968,111.968s50.23,111.968,111.968,111.968 s111.968-50.23,111.968-111.968S258.097,84.299,196.359,84.299z M196.295,286.384c-20.234,0.065-38.917-6.788-54.109-18.166 c0.065-18.23,14.933-32.97,33.164-32.97h42.214c18.166,0,32.905,14.61,33.164,32.776 C235.535,279.467,216.788,286.384,196.295,286.384z M269.216,249.212c-7.564-20.881-27.539-35.749-50.941-35.749h-43.572 c-23.596,0-43.507,14.998-51.071,35.943c-10.925-14.933-17.455-33.228-17.455-53.075c0-49.713,40.404-90.182,90.182-90.182 s90.182,40.404,90.182,90.117C286.541,216.049,280.077,234.279,269.216,249.212z\"\n  })), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSettings);\nexport default __webpack_public_path__ + \"static/media/settings.3bc50b55.svg\";\nexport { ForwardRef as ReactComponent };","import React,  { useState, useRef } from 'react'\nimport {  AwesomeButton, AwesomeButtonProgress } from 'react-awesome-button';\nimport \"react-awesome-button/dist/styles.css\";\nimport { Button, Select, MenuItem, Slider, TextField } from '@material-ui/core'\nimport { makeStyles, withStyles,} from '@material-ui/core/styles';\nimport { ReactComponent as SettingsLogo } from '../assets/settings.svg';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { green } from '@material-ui/core/colors';\n\n\n\nfunction Settings(props) {\n    //function color_to_RGB_string(color){\n\t//\treturn `rgb(${color.r*255}, ${color.g*255}, ${color.b*255})`;\n    //}\n    //const trainTheAgent = props.trainAgent;\n\n    /*useEffect(() => {\n        if(props.trainAgent == true)\n      }, [trainTheAgent ]);*/\n    \n    const [epochs, setEpochs] = useState(500000);\n    const [startRow, setStartRow] = useState(5);\n    const [startCol, setStartCol] = useState(5);\n    const [finishRow, setFinishRow] = useState(25);\n    const [finishCol, setFinishCol] = useState(25);\n    const [finishPosition, setFinishPosition] = useState({});\n    const [learningRate, setLearningRate] = useState(0.4);\n    const [agentCuriosity,setAgentCuriosity] = useState(0.4);\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n          '& > *': {\n            margin: theme.spacing(1),\n            background: '#1E88E5',\n            border: 0,\n            borderRadius: 3,\n            color: 'white',\n            width: '150px',\n            height: '44px',\n            'margin-left': '10px',\n            'font-family': 'inherit',\n            'font-weight': 600,\n            'font-style': 'normal',\n            \n          },\n        },\n        slider: {\n            marginTop: '15px',\n            marginBottom: '10px',\n            width: '150px',\n            \n        },\n        startRow:{\n            width:'75px',\n            marginTop:'-15px',\n            marginLeft: '-5px',\n            marginBottom:'5px',\n\n\n\n        },\n        startCol:{\n            width:'75px',\n            marginTop:'-15px',\n            marginLeft: '-75px',\n            marginBottom:'5px',\n            \n\n        },\n        finishRow:{\n            width:'75px',\n            marginBottom:'25px',\n            marginLeft: '-5px',\n\n\n        },\n        finishCol:{\n            width:'75px',\n            marginBottom:'25px',\n            marginLeft: '-75px',\n            \n        },\n    }));\n    const classes = useStyles();\n\n    const muiTheme = createMuiTheme({\n        overrides:{\n          MuiSlider: {\n            thumb:{\n            color: \"black\",\n            },\n            track: {\n              color: 'green'\n            },\n            rail: {\n              color: 'black',\n              \n            }\n          }\n      },\n      breakpoints:{\n\n      }\n    });\n\n    const textBoxTheme = createMuiTheme({\n        palette: {\n          primary: green,\n        },\n    });\n    function handleStartRowChange(e){\n        e.target.value = Math.abs(e.target.value % 30);\n        setStartRow(Number(e.target.value))\n\n    }\n    function handleStartColChange(e){\n        e.target.value = Math.abs(e.target.value % 30);\n        setStartCol(Number(e.target.value))\n    }\n    function handleFinishRowChange(e){\n        e.target.value = Math.abs(e.target.value % 30);\n        setFinishRow(Number(e.target.value))\n    }\n    function handleFinishColChange(e){\n        e.target.value = Math.abs(e.target.value % 30);\n        setFinishCol(Number(e.target.value))\n    }\n    function handleEpochChange(e,value){\n        setEpochs(1000 * Number(value))\n    }\n    function handleLRChange(e,value){\n        setLearningRate(Number(value))\n    }\n    function handleCuriosityChange(e,value){\n        setAgentCuriosity(Number(value))\n    }\n    function applySettings(){\n        props.configureSettings(epochs,startRow,startCol,finishRow,finishCol,learningRate,agentCuriosity);\n    }\n    function pressTrainingButton(){\n        props.configureSettings(epochs,startRow,startCol,finishRow,finishCol,learningRate,agentCuriosity);\n        props.startTraining()\n    }\n    function pressPolicyButton(){\n        props.configureSettings(epochs,startRow,startCol,finishRow,finishCol,learningRate,agentCuriosity);\n        props.visualizePolicy();\n    }\n    return (\n        <div className = \"settings_container\">\n            <h1 id = \"settings_title\">Visualizer Settings</h1>\n            <div id=\"divider\"></div>\n            <table>\n                <tbody>\n                    <tr>\n                        <td>Training Epochs:(Thousands) </td>\n                        <td>\n                        <div className={classes.slider}>\n                            <ThemeProvider theme={muiTheme}>\n                                <Slider\n                                        defaultValue={150}\n                                        aria-labelledby=\"discrete-slider\"\n                                        valueLabelDisplay=\"on\"\n                                        step={50}\n                                        marks\n                                        min={0}\n                                        max={350}\n                                        onChangeCommitted={(e,value) => handleEpochChange(e, value)}\n                                    />\n                            </ThemeProvider>\n                        </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Start Position: </td>\n                        <td>\n                            <div className={classes.startRow}>\n                            <ThemeProvider theme={textBoxTheme}>\n                                <TextField\n                                    className={classes.margin}\n                                    id=\"mui-theme-provider-outlined-input\"\n                                    label=\"Row\"\n                                    variant=\"outlined\"\n                                    type = \"number\"\n                                    onChange={e => handleStartRowChange(e)}\n                                    />\n                            </ThemeProvider>\n                            </div>\n                        </td>\n                        <td>\n                            <div className={classes.startCol}>\n                            <ThemeProvider theme={textBoxTheme}>\n                                <TextField\n                                    className={classes.margin}\n                                    id=\"mui-theme-provider-outlined-input\"\n                                    label=\"Col\"\n                                    variant=\"outlined\"\n                                    type = \"number\"\n                                    onChange={e => handleStartColChange(e)}\n                                />\n                            </ThemeProvider>\n                            </div>\n                            \n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Target Position: </td>\n                        <td>\n                            <div className={classes.finishRow}>\n                            <ThemeProvider theme={textBoxTheme}>\n                                <TextField\n                                    className={classes.margin}\n                                    id=\"mui-theme-provider-outlined-input\"\n                                    label=\"Row\"\n                                    variant=\"outlined\"\n                                    type = \"number\"\n                                    onChange={e => handleFinishRowChange(e)}\n\n                                />\n                            </ThemeProvider>\n                            </div>\n                        </td>\n                        <td>\n                            <div className={classes.finishCol} >\n                            <ThemeProvider theme={textBoxTheme}>\n                                <TextField\n                                    className={classes.margin}\n                                    id=\"mui-theme-provider-outlined-input\"\n                                    label=\"Col\"\n                                    variant=\"outlined\"\n                                    type = \"number\"\n                                    onChange={e => handleFinishColChange(e)}\n\n                                />\n                            </ThemeProvider>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Learning Rate: </td>\n                        <td>\n                            <div className={classes.slider}>\n                                <ThemeProvider theme={muiTheme}>\n                                    <Slider\n                                        defaultValue={0.4}\n                                        aria-labelledby=\"discrete-slider\"\n                                        valueLabelDisplay=\"on\"\n                                        step={0.05}\n                                        marks\n                                        min={0}\n                                        max={1}\n                                        onChangeCommitted={(e,value) => handleLRChange(e, value)}\n                                    /> \n                                </ThemeProvider> \n                            </div>      \n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Agent Curiosity: </td>\n                        <td>\n                            <div className={classes.slider}>\n                                <ThemeProvider theme={muiTheme}>\n                                    <Slider\n                                        defaultValue={0.7}\n                                        aria-labelledby=\"discrete-slider\"\n                                        valueLabelDisplay=\"on\"\n                                        step={0.1}\n                                        marks\n                                        min={0.1}\n                                        max={1}\n                                        onChangeCommitted={(e,value) => handleCuriosityChange(e, value)}\n                                    />\n                                </ThemeProvider>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                        <div className = \"settings-button\" id = \"settings_button\">\n                                <AwesomeButtonProgress \n                                    type = \"secondary\"\n                                    size = \"medium\"\n                                    disabled = {false}\n                                    loadingLabel = \"Training agent\"\n                                    resultLabel = \"Done :-)\"\n                                    ripple = {true}\n                                    action={(element, next) => {\n                                        setTimeout(() => {\n                                            next(true, '');\n                                            pressTrainingButton();\n                                        }, 150);\n                                    }}\n                                >\n                                    Apply &amp; Train\n                                </AwesomeButtonProgress>\n                            </div>\n                        </td>\n                        <td>\n                            <div className = \"settings-button\" id = \"settings_button\">\n                                <AwesomeButtonProgress \n                                    type = \"secondary\"\n                                    size = \"medium\"\n                                    disabled = {false}\n                                    loadingLabel = \"Training agent\"\n                                    resultLabel = \"Done :-)\"\n                                    ripple = {true}\n                                    action={(element, next) => {\n                                        setTimeout(() => {\n                                            next(true, '');\n                                            pressPolicyButton();\n                                        }, 150);\n                                    }}\n                                >\n                                    Visualize Optimal Policy\n                                </AwesomeButtonProgress>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td></td>\n                        <td>\n                            <SettingsLogo id = \"settings_icon\"/>  \n                        </td>\n                    </tr>\n                </tbody>\n        </table>\n        </div>\n    )\n}\n\nexport default Settings\n","import React, { useState, useRef } from 'react';\nimport Grid from './Grid';\nimport Mars from './Mars';\nimport { Canvas } from 'react-three-fiber';\nimport Floor from './Floor';\nimport Controls from './Controls'; \nimport { Button, Select, MenuItem } from '@material-ui/core'\nimport BorderClearIcon from '@material-ui/icons/BorderClear';\nimport TerrainIcon from '@material-ui/icons/Terrain';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport { spacing } from '@material-ui/system';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tutorial from './Tutorial';\nimport Settings from './Settings';\nimport { AwesomeButton, AwesomeButtonProgress } from 'react-awesome-button';\nimport \"react-awesome-button/dist/styles.css\";\n\n\n//<OrbitControls enabled = {!worldSetup} />\nfunction World(props) {\n   let width = window.innerWidth;\n   let height = window.innerHeigh;\n\n\n\n   const [selectedAlgorithm,  setSelectedAlgorithm] = useState({});     // keeps track of the algorithm we choose\n   const [runState, setRunState] = useState(false);                     //when runState is true the visualizer algorithm is running\n   const [resetCamera, setResetCamera] = useState(false);               //when resetCamera is true we reset the camera position\n   const [clearWalls, setClearWalls] = useState(false);\n   const [agentTrained, setAgentTrained] = useState(false);\n   const [clearPath, setClearPath] = useState(false);\n   const [trainAgent, setTrainAgent] = useState(false);\n   const [agentKnowledge, setAgentKnowledge] = useState(\"\");\n   const cameraPosition = useRef([0,375,0]);\n   const [selectedMazeAlgorithm, setSelectedMazeAlgorithm] = useState(\"\");\n   const [algorithmSpeed, setAlgorithmSpeed] = useState(\"15\");\n   const [selected_algo_is_undefined, setAlgo] = useState(true);\n   \n   const [epochs, setEpochs] = useState(500000);\n   const [startRow, setStartRow] = useState(5);\n   const [startCol, setStartCol] = useState(5);\n   const [finishRow, setFinishRow] = useState(25);\n   const [finishCol, setFinishCol] = useState(25);\n   const [learningRate, setLearningRate] = useState(0.4);\n   const [agentCuriosity,setAgentCuriosity] = useState(0.4);\n   const [applyingSettings, setApplyingSettings] = useState(false);\n   const [settingsConfig, setConfig] = useState({\n       epochs: 500000,\n       startRow: 5,\n       startCol: 5,\n       finishRow: 25,\n       finishCol: 25,\n       learningRate: 0.4,\n       agentCuriosity: 0.4,   \n   })\n\n   const [visualizeOptimalPolicy, setVisualizeOptimalPolicy] = useState(false)\n   \n   const useStyles = makeStyles((theme) => ({\n    root: {\n      '& > *': {\n        //margin: theme.spacing(1),\n        background: '#1E88E5',\n        border: 0,\n        borderRadius: 3,\n        color: 'white',\n        width: '150px',\n        height: '44px',\n        'margin-left': '10px',\n        'font-family': 'inherit',\n        'font-weight': 600,\n        'font-style': 'normal',\n      },\n    },\n  }));\n\n  const classes = useStyles();\n\n\n   //calling on this funciton in the child component (Grid) to update runstate in this parent\n   function updateRunState(newState){\n       setRunState(newState);\n   }\n   function stopClearPath(){\n       setClearPath(false);\n   }\n   function stopClearWalls(){\n       setClearWalls(false);\n   }\n   function startTraining(){\n       setTrainAgent(true);\n   }\n   function stopTraining(){\n       setTrainAgent(false);\n   }\n   function resetAgentKnowledge(){\n       setAgentKnowledge(\"clearMemory\")\n   }\n   function agentResetDone(){\n       setAgentKnowledge(\"\");\n   }\n   function configureSettings(userEpochs,userStartRow,userStartCol,userFinishRow,userFinishCol,userLearningRate,userAgentCuriosity){\n       setConfig({\n           epochs: Number(userEpochs),\n           startRow: Number(userStartRow),\n           startCol: Number(userStartCol),\n           finishRow: Number(userFinishRow),\n           finishCol: Number(userFinishCol),\n           learningRate: Number(userLearningRate),\n           agentCuriosity: Number(userAgentCuriosity),\n\n       });\n       setApplyingSettings(true)\n       \n   }\n   function finishApplyingSettings(){\n       setApplyingSettings(false);\n   }\n   function visualizePolicy(){\n    setVisualizeOptimalPolicy(true);\n}\nfunction finishedOptimalPolicy(){\n    setVisualizeOptimalPolicy(false);\n}\n   function handleOnChange(event){\n       if(event.target.value !== undefined){\n           setAlgo(false);\n        }\n       if(event.target.value === undefined){\n        setAlgo(true);\n        }\n       if(event.target.value === \"Dijkstra\"){\n           setSelectedAlgorithm({\n               algorithm: \"Dijkstra\",\n               type: \"weighted\", \n               heuristic: \"\",\n           });\n       }\n       else if (event.target.value === \"qLearning\"){\n           setSelectedAlgorithm({\n               algorithm: \"Q-Learning\",\n               type: \"machine-learning\",\n               heuristic: \"\",\n           });\n       }\n       else if(event.target.value === \"aStar\"){\n           setSelectedAlgorithm({\n               algorithm: \"aStar\",\n               type: \"weighted\",\n               heuristic: \"poweredManhattanDistance\",\n           });\n       }\n       else if(event.target.value === \"BFS\"){\n           setSelectedAlgorithm({\n               algorithm: \"BFS\",\n               type: \"unweighted\",\n               heuristic: \"\",\n           });\n       }\n       else if(event.target.value === \"DFS\"){\n           setSelectedAlgorithm({\n               algorithm: \"DFS\",\n               type: \"unweighted\",\n               heuristic: \"\"\n           })\n       }\n   }\n   function updateResetStatus(){\n       setResetCamera(false);\n   }\n   function handleMazeChange(event){\n       setSelectedMazeAlgorithm(event.target.value);\n   }\n   function stopMazeSelection(){\n       setSelectedMazeAlgorithm(\"\");\n   }\n\n\n    return (\n        <>\n        <div className = \"header\" align = \"center\" >\n            <div className={classes.root}>\n                <Select name = \"algorithms\" id = \"algorithms\" displayEmpty onChange={e => handleOnChange(e)}>\n                    <MenuItem>Select Algorithm</MenuItem>\n                    <MenuItem value = \"qLearning\">Q-Learning</MenuItem>\n                    <MenuItem value = \"Dijkstra\">Dijkstra's Algorithm</MenuItem>\n                    <MenuItem value = \"aStar\">A* Search</MenuItem>\n                    <MenuItem value = \"BFS\">Breadth First Search</MenuItem>\n                    <MenuItem value = \"DFS\">Depth First Search</MenuItem>\n                    \n\n                </Select>\n            </div>\n            <div className={classes.root}>\n                <Select name = \"mazes\" id = \"mazes\" displayEmpty onChange = {e => handleMazeChange(e)}>\n                    <MenuItem>Select Maze</MenuItem>\n                    <MenuItem value = \"randomMaze\">Random Maze</MenuItem>\n                    <MenuItem value = \"recursiveDivision\">Recursive Division</MenuItem>\n                </Select>\n            </div>\n            <div className = \"header_items\">\n                <AwesomeButtonProgress \n                    type = \"secondary\"\n                    size = \"medium\"\n                    disabled = {runState || selected_algo_is_undefined}\n                    loadingLabel = \"Visualizing...\"\n                    resultLabel = \"Success\"\n                    ripple = {true}\n                    action={(element, next) => {\n                        setTimeout(() => {\n                            next(true, '');\n                            setRunState(true)\n                        }, 1000);\n                    }}\n                    >\n                    Visualize\n                </AwesomeButtonProgress>\n            </div>\n            <div className = \"header_items\">\n                <AwesomeButtonProgress \n                    type = \"secondary\"\n                    size = \"medium\"\n                    disabled = {runState}\n                    loadingLabel = \"Clearing Path...\"\n                    resultLabel = \"Path Cleared :-)\"\n                    ripple = {true}\n                    action={(element, next) => {\n                        setTimeout(() => {\n                            next(true, '');\n                            setClearPath(true)\n                        }, 150);\n                    }}\n                    >\n                    Clear Path\n                </AwesomeButtonProgress>\n            </div>\n            <div className = \"header_items\">\n                <AwesomeButtonProgress \n                    type = \"secondary\"\n                    size = \"medium\"\n                    disabled = {runState}\n                    loadingLabel = \"Clearing Walls...\"\n                    resultLabel = \"Walls Cleared :-)\"\n                    ripple = {true}\n                    action={(element, next) => {\n                        setTimeout(() => {\n                            next(true, '');\n                            setClearWalls(true)\n                        }, 550);\n                    }}\n                    >\n                    Clear Walls\n                </AwesomeButtonProgress>\n            </div>\n        <div className = \"header_items\">\n        <AwesomeButton \n            type = \"secondary\"\n            size = \"medium\"\n            ripple = {true}\n            action={(element, next) => {\n                setResetCamera(!resetCamera)\n            }}\n            >\n            Setup World\n        </AwesomeButton>\n        </div>\n        <div className={classes.root}>\n        <Select name = \"algorithmSpeed\" id = \"algorithmSpeed\" displayEmpty onChange = { e=> setAlgorithmSpeed(e.target.value)}>\n            <MenuItem>Select Speed</MenuItem>\n            <MenuItem value = \"15\">Fast</MenuItem>\n            <MenuItem value = \"25\">Medium</MenuItem>\n            <MenuItem value = \"80\">Slow</MenuItem>\n        </Select>\n        </div>\n        <div className = \"header_items\">\n        <AwesomeButton \n            type = \"secondary\"\n            size = \"medium\"\n            ripple = {true}\n            action={(element, next) => {\n               resetAgentKnowledge(); \n            }}\n            >\n            Reset Agent\n        </AwesomeButton>\n        </div>\n        </div>\n        <Tutorial />\n        <Settings  \n            startTraining = {startTraining}\n            configureSettings = {configureSettings}\n            visualizePolicy = {visualizePolicy}\n        />\n        <Canvas colorManagement \n        camera={\n            {\n                position: cameraPosition.current,\n                fov: 53,\n                aspect: width / height,\n                near: 1, \n                far: 5000\n                }\n            }\n        >\n        <ambientLight \n            intensity = {1} \n            color = {0xBBC2D0}/>\n        {/*<fog attach = \"fog\" args = {[0xFFFFFF , 0, 750]}/>*/}\n        <hemisphereLight \n            color = {\"hsl(0.6, 1, 0.6)\"} \n            groundColor = {0x87775d} \n            intensity = {0.1} \n            position = {[0,5,0]} \n        />\n        <directionalLight \n            color = {\"hsl(0.1, 1, 0.95)\"} \n            groundColor = {0x87775d} \n            intensity = {0.5} \n            position = {[-70,122.5,70]} \n            castShadow = {true}\n        />   \n        <Grid \n            gridDimensions = {30}\n            updateRunState = {updateRunState}\n            stopClearPath = {stopClearPath}\n            stopClearWalls = {stopClearWalls}\n            stopMazeSelection = {stopMazeSelection}\n            stopTraining = {stopTraining}\n            agentResetDone = {agentResetDone}\n            finishApplyingSettings = {finishApplyingSettings}\n            visualizeOptimalPolicy = {visualizeOptimalPolicy}\n            finishedOptimalPolicy = {finishedOptimalPolicy}\n            resetStatus = {resetCamera}\n            agentKnowledge = {agentKnowledge}\n            selectedAlgorithm = {selectedAlgorithm}\n            selectedMazeAlgorithm = {selectedMazeAlgorithm}\n            algorithmSpeed = {algorithmSpeed} \n            //epochs = {settingsConfig.epochs}\n            //learningRate = {settingsConfig.learningRate}\n            //agentCuriosity = {settingsConfig.agentCuriosity}\n            applyingSettings = {applyingSettings}\n            settingsConfig = {settingsConfig}\n            worldProperties = {\n            {\n                rows: 30,\n                cols: 30,\n                runState: runState,\n                clearPath: clearPath,\n                clearWalls: clearWalls,\n                trainAgent: trainAgent,\n                start: {\n                    row: settingsConfig.startRow,\n                    col: settingsConfig.startCol,\n                },\n                finish: {\n                    row: settingsConfig.finishRow,\n                    col: settingsConfig.finishCol,\n                },\n                colors: {\n                    start: {r: 0, g: 1, b: 0 },\n                    finish: {r: 1, g: 0, b: 0},\n                    wall: {r: 0.109, g: 0.109, b: 0.45},\n                    visited: {r: 0.329, g: 0.27, b: 0.968},\n                    path: {r: 1, g: 1, b: 0},\n                    default: {r: 1, g: 1, b: 1},\n                },\n                nodeDimensions:{\n                    height: 10,\n                    width: 10,\n                },\n            }\n        }/>\n        <Floor/>\n        <Controls \n            resetStatus = {resetCamera}\n            updateResetStatus = {updateResetStatus}\n        />\n       \n      </Canvas>\n      </>\n    )\n}\n\nexport default World\n\n","import React from 'react'\nimport './App.scss';\nimport World from './components/World';\n\n\nfunction App() {\n  return (\n    <>\n      <World/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}